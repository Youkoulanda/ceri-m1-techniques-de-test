version: 2.1

orbs:
  codecov: codecov/codecov@4.0.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/jobs-steps/#jobs-overview & https://circleci.com/docs/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/executor-intro/ & https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      # Specify the version you desire here
      # See: https://circleci.com/developer/images/image/cimg/openjdk
      - image: cimg/openjdk:20.0

    # Add steps to the job
    #See: https://circleci.com/docs/jobs-steps/#steps-overview & https://circleci.com/docs/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout

      # pom.xml
      - run:
          name: Navigate to project directory
          command: cd TP-techniques_de_test && mvn -B -DskipTests clean package

      # Then run your tests!
      - run:
          name: Unit tests with Jacoco
          command: cd TP-techniques_de_test && mvn test jacoco:report

      #checkstyle
      - run:
          name: Checkstyle Analysis
          command: cd TP-techniques_de_test && mvn checkstyle:checkstyle

      #Codecov
      - run:
          name: Upload coverage to Codecov
          command: bash <(curl -s https://codecov.io/bash)
  docs-deploy:
    docker:
      - image: cimg/openjdk:20.0
    steps:
      - checkout
      # Définir GIT_SSH_COMMAND pour forcer l'utilisation de la clé SSH spécifique
      - run:
          name: Set GIT_SSH_COMMAND to use the right SSH key
          command: |
            mkdir -p ~/.ssh
            echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            ssh-keyscan github.com >> ~/.ssh/known_hosts
      #Javadoc
      - run:
          name: Generate Javadoc
          command: |
            cd TP-techniques_de_test && mvn javadoc:javadoc

      # Deployment
      - add_ssh_keys:
          fingerprints:
            - "38:69:46:7a:15:f0:1b:e5:4f:b2:8a:5b:32:37:be:a8"
      - run:
          name: Install and configure gh-pages
          command: |
            git config --global user.email "ci-build@YassmineEttaoufik.com"
            git config --global user.name "ci-build"

            git clone git@github.com:${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}.git gh-pages
            cd gh-pages && git checkout -b gh-pages        
            cp -r TP-techniques_de_test/target/site/apidocs/* ./
            
            git add -A
            git commit -m "[skip ci] Updated Javadoc"
            git push origin gh-pages --force 


# Orchestrate jobs using workflows
# See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
workflows:
  version: 2
  sample-workflow: # This is the name of the workflow, feel free to change it to better match your workflow.
    when:
      branch: master
    jobs:
      - build-and-test:
          filters:
            branches:
              only:
                - master
      - docs-deploy:
          requires:
            - build-and-test
          filters:
            branches:
              only:
                - master