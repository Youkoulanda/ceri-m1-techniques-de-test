version: 2.1
orbs:
  codecov: codecov/codecov@4.0.1
jobs:

  build-and-test:

    docker:
      - image: cimg/openjdk:20.0
    steps:
      - checkout
          - run:
          name: Debug directory structure
          command: ls -R

      - run:
          name: Navigate to project directory
          command: cd TestTech && mvn -B -DskipTests clean package

      - run:
          name: Unit tests with Jacoco
          command: cd TestTech && mvn test jacoco:report


      - run:
          name: Checkstyle Analysis
          command: cd TestTech && mvn checkstyle:checkstyle


      - run:
          name: Upload coverage to Codecov
          command: bash <(curl -s https://codecov.io/bash)
  docs-deploy:
    docker:
      - image: cimg/openjdk:20.0
    steps:
      - checkout

      - run:
          name: Set GIT_SSH_COMMAND to use the right SSH key
          command: |
            mkdir -p ~/.ssh
            echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            ssh-keyscan github.com >> ~/.ssh/known_hosts

      - run:
          name: Generate Javadoc
          command: |
            cd ceri-m1-techniques-de-test && mvn javadoc:javadoc


      - add_ssh_keys:
          fingerprints:
            - "38:69:46:7a:15:f0:1b:e5:4f:b2:8a:5b:32:37:be:a8"
      - run:
          name: Install and configure circleci-project-setup
          command: |
            git config --global user.email "ci-build@raniaChouchene.com"
            git config --global user.name "ci-build"

            git clone git@github.com:${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}.git circleci-project-setup
            cd circleci-project-setup && git checkout -b circleci-project-setup       
            cp -r TP-techniques_de_test/target/site/apidocs/* ./
            
            git add -A
            git commit -m "[skip ci] Updated Javadoc"
            git push  origin/circleci-project-setup  --force 

workflows:
  version: 2
  sample-workflow:
    when:
      branch: master
    jobs:
      - build-and-test:
          filters:
            branches:
              only:
                - master
      - docs-deploy:
          requires:
            - build-and-test
          filters:
            branches:
              only:
                - master